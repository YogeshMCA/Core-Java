package com.example.Exceptions;

import java.io.FileReader;

public class Exceptions {

	public static void main(String[] args) throws CheckedException{
		/*
		 * Checked Exceptions - Exceptions that are checked by the compiler. Can not Propagated by throw, but can do with throws ( ClassNotFoundException, IOException, SQLException )
		 * When using FileReader without any exception handler, compiler will show an error. 
		 * Eg: FileReader reader = new FileReader("hh.txt"); 
		 * This is because of public FileReader(java.lang.String arg0) throws java.io.FileNotFoundException;
		 * Eg: Class.forName("Hello"); ClassNotFouondException
		 * Throws - In method signature, this insist programmer to handle the exception.
		 * 
		 * Un-Checked Exceptions - Exceptions that can not be checked by the compiler and subclass of RuntimeException.(ArithmeticException, ArrayStoreException, ClassCastException)
		 * unchecked exceptions can be propagated
		 */
		
	Transfer trans = new Transfer();
	
	try{
		int a[] ={10};
		a[1]=20;
	}catch(ArrayIndexOutOfBoundsException | NullPointerException e){
		/*
		 * Multiple Exception in a catch block - Should not be Parent - Child class Eg: catch(Exception | NullPointerException e)
		 */
		System.out.println(e);
	}
	
		
	}

}

class CheckedException extends Exception{
	public CheckedException() {
		super();
	}
}

class Transfer{
	public Transfer()throws ArrayIndexOutOfBoundsException {
		System.out.println("Transfer Class");
	}
}