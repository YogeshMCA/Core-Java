package com.example.Inheritance;

import java.util.function.Consumer;

/*
 * The return type should be the same or a subtype of the return type declared in the original overridden method in the super class.
 * 
 * Interface - Can define default method implementation inside it. It can be called by its subclass object when it is not overridden.  
 */
public class AboutInhr<E> {

	public static void main(String[] args) {
		 
		B b = new C();
		b.disp();
		C c = new C();
		c.disp();
		
		AboutInhr<String> ai = new AboutInhr<>();
		ai.generic(action);

	}
	public void generic(Consumer<? super E> action){
		System.out.println("=========");
	}

}

abstract class A{
	public Number disp(){
		System.out.println("A");
		return 0;
	}
}

interface B{
	default public void disp(){
		System.out.println("B");
		
	}
}

class C implements B{
	public void disp(){
		//super.disp();
		System.out.println("C");
		
	}
}
