package com.example.DesignPatterns;

public class Singleton {

	public static void main(String[] args) {
		Single obj = Single.getInstance();
		Single obj1 = Single.getInstance();
		System.out.println("Obj HashCode:"+obj.hashCode()+" Obj1 HashCode"+obj1.hashCode()+" ==:"+(obj1==obj)+"Equal:"+obj1.equals(obj));
		
	}

}

class Single implements Objects{
	private static Single sgObj=null;
	private Single(){
		
	}
	public static Single getInstance(){
		if(sgObj==null){
			sgObj = new Single();
			return sgObj;
		}
		return sgObj;
	}
	public void display(){
		System.out.println("Singleton Class called");
	}
}

interface Objects{
	public Single getInstance();
}